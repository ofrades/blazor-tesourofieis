@inject IStyled Styled

<Styled @bind-Classname="@label">
    label: toggle-label;
    display: flex;
    align-items: center;
    margin-bottom: 0rem;
</Styled>

<Styled @bind-Classname="@toggle">
    label: toggle;
    position: relative;
    &:after {
        content: '';
        font-size: 90%;
        position: absolute;
        @* top: -1px; *@
        left: 30px;
    }
    &:before {
        content: '';
        font-size: 90%;
        position: absolute;
        @* top: -1px; *@
        left: 5px;
    }
</Styled>

<Styled @bind-Classname="@input">
    label: input;
    position: absolute;
    @* left: 0; *@
    @* top: 0; *@
    z-index: 5;
    opacity: 0;
    cursor: pointer;
    &:checked + span {
        background: #222;
    }
    &:checked + span:after {
        transform: translate3d(30px, 0, 0);
    }
</Styled>

<Styled @bind-Classname="@slider">
    label: slider;
    display: block;
    height: 20px;
    width: 50px;
    border-radius: 32px;
    transition: 0.25s ease-in-out;
    background: #ccc;
    &:after {
        content: '';
        position: absolute;
        border-radius: 100%;
        @* top: 0; *@
        @* left: 0; *@
        z-index: 2;
        background: #fff;
        transition: 0.25s ease-in-out;
        width: 20px;
        height: 20px;
    }
</Styled>

<label for="mode" class="@label">
    <div class="@toggle">
        <input id="mode" class="@input" type="checkbox" aria-label="dark mode toggle" checked="@bChecked" @onchange="@OnChange" />
        <span class="@slider" />
    </div>
</label>

@code {
    private string toggle, input, slider, label;
    private bool bChecked = false;

    private void OnChange(ChangeEventArgs e) {
        bChecked = !bChecked;

        if (bChecked) {
            //Setup dark theme
            Styled.SetThemeValue("colors.background-color", "#111");
            Styled.SetThemeValue("colors.text-color", "#fff");
        } else {
            //Setup light theme
            Styled.SetThemeValue("colors.background-color", "#fff");
            Styled.SetThemeValue("colors.text-color", "#111");
        }
        StateHasChanged();
    }
}